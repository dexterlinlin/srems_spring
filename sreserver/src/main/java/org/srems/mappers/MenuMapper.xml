<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.srems.mappers.MenuMapper">
    <resultMap id="BaseResultMap" type="org.srems.models.Menu">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="component" jdbcType="VARCHAR" property="component"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="iconcls" jdbcType="VARCHAR" property="iconCls"/>
        <result column="keepalive" jdbcType="BIT" property="keepAlive"/>
        <result column="requireauth" jdbcType="BIT" property="requireAuth"/>
        <result column="parentid" jdbcType="VARCHAR" property="parentid"/>
        <collection property="roles" ofType="org.srems.models.Role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
            <result column="rnamezh" property="nameZh"/>
        </collection>
        <collection property="children" ofType="org.srems.models.Menu">
            <id column="id2" property="id"/>
            <result column="path2" property="path" jdbcType="VARCHAR"/>
            <result column="component2" property="component" jdbcType="VARCHAR"/>
            <result column="name2" property="name" jdbcType="VARCHAR"/>
            <result column="iconcls2" property="iconCls" jdbcType="VARCHAR"/>
            <result column="keepalive2" property="keepAlive"/>
            <result column="requireauth2" property="requireAuth"/>
            <collection property="children" ofType="org.srems.models.Menu">
                <id column="id3" property="id"/>
                <result column="name3" property="name" jdbcType="VARCHAR"/>
            </collection>
        </collection>
    </resultMap>

    <select id="getAllMenu" resultMap="BaseResultMap">
        SELECT m.*,map.fnodeid AS rid,r.name AS rname,r.namezh AS rnamezh FROM menu m
        LEFT JOIN tbl_relation_map map ON m.id=map.tnodeid
        LEFT JOIN role r ON map.fnodeid=r.id
        WHERE map.fnodetype='role' AND map.tnodetype='menu';
    </select>
    <select id="getMenusBySreUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT m1.*,m2.id as id2,m2.path as path2,m2.component as component2,m2.iconcls as iconcls2,
        m2.keepalive as keepalive2,m2.requireauth as requireauth2
        FROM menu m1 INNER JOIN menu m2 ON m1.id=m2.parentid
        INNER JOIN tbl_relation_map menurolemap ON menurolemap.tnodeid=m2.id AND menurolemap.tnodetype='menu' AND menurolemap.fnodetype='role'
        INNER JOIN tbl_relation_map userrolemap ON userrolemap.fnodetype='sreuser' AND userrolemap.tnodetype='role'
        WHERE userrolemap.fnodeid=#{sreUserId} AND m1.`parentid` IS NULL;
    </select>

    <select id="menuTree" resultMap="BaseResultMap">
        select m1.`id`,m1.`name`,m2.`id` as id2,m2.`name` as name2,m3.`id` as id3,m3.`name` as name3 from menu m1,menu m2,menu m3 where m1.`id`=m2.`parentId` and m2.`id`=m3.`parentId` and m3.`enabled`=true
        </select>
    <select id="getMenusByRid" resultType="java.lang.String">
        select m.id from menu m inner join tbl_relation_map map
        on m.id = map.tnodeid
        where map.fnodetype='role' and map.tnodetype='menu' and map.fnodeid=#{rid};
    </select>

</mapper>